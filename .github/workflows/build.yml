name: build

on: [push]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup msvc-dev-cmd
      uses: ilammy/msvc-dev-cmd@v1
      with: 
        arch: x86
    - name: Build-MSVC
      run: ./"Build VS.cmd"
    - name: Create Archive(MSVC)
      run: |
        cd $Env:GITHUB_WORKSPACE
        tar --exclude ".git*"　-a -cvf AviUtl-Shutdown-Plugin-MSVC.zip *
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ github.sha }}
        release_name: Release ${{ github.sha }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./AviUtl-Shutdown-Plugin-MSVC.zip
        asset_name: AviUtl-Shutdown-Plugin-MSVC.zip
        asset_content_type: application/zip
    - name: Remove MSVCfile
       run: |
         del AviUtl-Shutdown-Plugin-MSVC.zip
         del shutdown_plugin.auf
    - name: Build-MinGW
      run: ./"Build MinGW.cmd"
    - name: Create Archive(MinGW)
      run: |
        cd $Env:GITHUB_WORKSPACE
        tar --exclude ".git*"　-a -cvf AviUtl-Shutdown-Plugin-MinGW.zip *
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./AviUtl-Shutdown-Plugin-MinGW.zip
        asset_name: AviUtl-Shutdown-Plugin-MinGW.zip
        asset_content_type: application/zip
