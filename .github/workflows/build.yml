name: build

on:
  push:
    branches:
      - master

jobs:
  get_rev_list_count:
    name: Get rev-list_count
    runs-on: ubuntu-latest
    outputs:
      rev_list_count: ${{ steps.rev.outputs.REV_LIST_COUNT }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set REV_LIST_COUNT
      id: rev
      run: |
        cd ${{ github.workspace }}
        REVCOUNT=`git rev-list --count HEAD`
        echo "::set-output name=REV_LIST_COUNT::${REVCOUNT}"

  build:
    runs-on: windows-latest
    needs: get_rev_list_count

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup msvc-dev-cmd
      uses: ilammy/msvc-dev-cmd@v1
      with: 
        arch: x86
    - name: Build-MSVC
      run: ./"Build VS.cmd"
    - name: Create Archive(MSVC)
      run: |
        cd $Env:GITHUB_WORKSPACE
        tar --exclude ".git*"　--exclude "*.zip"　-a -cvf AviUtl-Shutdown-Plugin-MSVC.zip *
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MSYS
        update: true
        install: >-
          mingw-w64-cross-gcc
    - run: |
        set MSYSTEM=MINGW32
        msys2 -c 'i686-w64-mingw32-g++ -Wall -shared "-Wl,--dll,--enable-stdcall-fixup" -static-libgcc -static-libstdc++ -o shutdown_plugin.auf src/shutdown_plugin.cpp src/shutdown_plugin.def'
    - name: Create Archive(MinGW)
      run: |
        cd $Env:GITHUB_WORKSPACE
        tar --exclude ".git*"　--exclude "*.zip" -a -cvf AviUtl-Shutdown-Plugin-MinGW.zip *
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ needs.get_rev_list_count.outputs.rev_list_count }}
        release_name: Release ${{ needs.get_rev_list_count.outputs.rev_list_count }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./AviUtl-Shutdown-Plugin-MSVC.zip
        asset_name: AviUtl-Shutdown-Plugin-MSVC.zip
        asset_content_type: application/zip
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./AviUtl-Shutdown-Plugin-MinGW.zip
        asset_name: AviUtl-Shutdown-Plugin-MinGW.zip
        asset_content_type: application/zip
